# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import base_package.common_pb2 as common__pb2
import base_package.product_pb2 as product__pb2


class ProductStub(object):
    """商品管理
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPageProductClassifyList = channel.unary_unary(
                '/Product/GetPageProductClassifyList',
                request_serializer=common__pb2.G_BaseInfoRequest.SerializeToString,
                response_deserializer=product__pb2.G_PageProductClassifyResponse.FromString,
                )
        self.GetProductMatchingList = channel.unary_unary(
                '/Product/GetProductMatchingList',
                request_serializer=product__pb2.G_ProductMatchingRequest.SerializeToString,
                response_deserializer=product__pb2.G_ProductMatchingListResponse.FromString,
                )
        self.ProductPullTask = channel.unary_unary(
                '/Product/ProductPullTask',
                request_serializer=product__pb2.G_ProductPullRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.GetProductPriceTrackingList = channel.unary_unary(
                '/Product/GetProductPriceTrackingList',
                request_serializer=product__pb2.G_ProductPriceTrackListRequest.SerializeToString,
                response_deserializer=product__pb2.G_ProductPriceTrackListResponse.FromString,
                )
        self.GetProductStocksList = channel.unary_unary(
                '/Product/GetProductStocksList',
                request_serializer=product__pb2.G_ProductStocksRequest.SerializeToString,
                response_deserializer=product__pb2.G_PageProductStocksResponse.FromString,
                )
        self.GetProductWarehouseStockslist = channel.unary_unary(
                '/Product/GetProductWarehouseStockslist',
                request_serializer=product__pb2.G_ProductWarehouseStocksRequest.SerializeToString,
                response_deserializer=product__pb2.G_PageProductStocksResponse.FromString,
                )
        self.PushProduct = channel.unary_unary(
                '/Product/PushProduct',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.PushProductStock = channel.unary_unary(
                '/Product/PushProductStock',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.PushProductVirtualStock = channel.unary_unary(
                '/Product/PushProductVirtualStock',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.PushProductPrice = channel.unary_unary(
                '/Product/PushProductPrice',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.ProductSupplementPricePull = channel.unary_unary(
                '/Product/ProductSupplementPricePull',
                request_serializer=product__pb2.G_ProductMatchingRequest.SerializeToString,
                response_deserializer=product__pb2.G_PageProductSupplementPriceResponse.FromString,
                )
        self.ProductListByKeys = channel.unary_unary(
                '/Product/ProductListByKeys',
                request_serializer=product__pb2.G_ProductListByKeysRequest.SerializeToString,
                response_deserializer=product__pb2.G_ProductListByKeysResponse.FromString,
                )
        self.PushProductUnits = channel.unary_unary(
                '/Product/PushProductUnits',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.GetProductDateList = channel.unary_unary(
                '/Product/GetProductDateList',
                request_serializer=product__pb2.G_PageProductDateListRequest.SerializeToString,
                response_deserializer=product__pb2.G_PageProductDateListResponse.FromString,
                )
        self.PushProductState = channel.unary_unary(
                '/Product/PushProductState',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )
        self.GetProductSkuState = channel.unary_unary(
                '/Product/GetProductSkuState',
                request_serializer=product__pb2.G_ProductSkuStateRequest.SerializeToString,
                response_deserializer=product__pb2.G_ProductSkuStateResponse.FromString,
                )
        self.PushProductAttribute = channel.unary_unary(
                '/Product/PushProductAttribute',
                request_serializer=common__pb2.G_PushRequest.SerializeToString,
                response_deserializer=common__pb2.G_PushResponse.FromString,
                )


class ProductServicer(object):
    """商品管理
    """

    def GetPageProductClassifyList(self, request, context):
        """获取商品分类列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductMatchingList(self, request, context):
        """获取商品Code+ErpKey列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductPullTask(self, request, context):
        """商品拉取不需要参数
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductPriceTrackingList(self, request, context):
        """商品价格跟踪
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductStocksList(self, request, context):
        """获取商品库存
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductWarehouseStockslist(self, request, context):
        """商品库存分布
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProduct(self, request, context):
        """增量推送商品信息 G_PageProductPushInfoResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductStock(self, request, context):
        """增量推送账面商品库存 G_PageProductStocksResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductVirtualStock(self, request, context):
        """增量推送虚拟商品库存 G_PageProductStocksResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductPrice(self, request, context):
        """增量推送商品价格 G_PageProductPriceResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductSupplementPricePull(self, request, context):
        """拉取所有商品最高跟踪价、最低跟踪价、最近跟踪价、成本价
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductListByKeys(self, request, context):
        """根据商品key获取商品列表 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductUnits(self, request, context):
        """增量推送商品价格 G_PageProductUnitResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductDateList(self, request, context):
        """根据条件查询推送最旧商品生产日期信息列表（第三方ERP连接定制协议）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductState(self, request, context):
        """增量推送商品状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductSkuState(self, request, context):
        """获取商品sku状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushProductAttribute(self, request, context):
        """增量推送商品属性
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPageProductClassifyList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPageProductClassifyList,
                    request_deserializer=common__pb2.G_BaseInfoRequest.FromString,
                    response_serializer=product__pb2.G_PageProductClassifyResponse.SerializeToString,
            ),
            'GetProductMatchingList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductMatchingList,
                    request_deserializer=product__pb2.G_ProductMatchingRequest.FromString,
                    response_serializer=product__pb2.G_ProductMatchingListResponse.SerializeToString,
            ),
            'ProductPullTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductPullTask,
                    request_deserializer=product__pb2.G_ProductPullRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'GetProductPriceTrackingList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductPriceTrackingList,
                    request_deserializer=product__pb2.G_ProductPriceTrackListRequest.FromString,
                    response_serializer=product__pb2.G_ProductPriceTrackListResponse.SerializeToString,
            ),
            'GetProductStocksList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductStocksList,
                    request_deserializer=product__pb2.G_ProductStocksRequest.FromString,
                    response_serializer=product__pb2.G_PageProductStocksResponse.SerializeToString,
            ),
            'GetProductWarehouseStockslist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductWarehouseStockslist,
                    request_deserializer=product__pb2.G_ProductWarehouseStocksRequest.FromString,
                    response_serializer=product__pb2.G_PageProductStocksResponse.SerializeToString,
            ),
            'PushProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProduct,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'PushProductStock': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductStock,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'PushProductVirtualStock': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductVirtualStock,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'PushProductPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductPrice,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'ProductSupplementPricePull': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductSupplementPricePull,
                    request_deserializer=product__pb2.G_ProductMatchingRequest.FromString,
                    response_serializer=product__pb2.G_PageProductSupplementPriceResponse.SerializeToString,
            ),
            'ProductListByKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductListByKeys,
                    request_deserializer=product__pb2.G_ProductListByKeysRequest.FromString,
                    response_serializer=product__pb2.G_ProductListByKeysResponse.SerializeToString,
            ),
            'PushProductUnits': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductUnits,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'GetProductDateList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductDateList,
                    request_deserializer=product__pb2.G_PageProductDateListRequest.FromString,
                    response_serializer=product__pb2.G_PageProductDateListResponse.SerializeToString,
            ),
            'PushProductState': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductState,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
            'GetProductSkuState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductSkuState,
                    request_deserializer=product__pb2.G_ProductSkuStateRequest.FromString,
                    response_serializer=product__pb2.G_ProductSkuStateResponse.SerializeToString,
            ),
            'PushProductAttribute': grpc.unary_unary_rpc_method_handler(
                    servicer.PushProductAttribute,
                    request_deserializer=common__pb2.G_PushRequest.FromString,
                    response_serializer=common__pb2.G_PushResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Product', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Product(object):
    """商品管理
    """

    @staticmethod
    def GetPageProductClassifyList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetPageProductClassifyList',
            common__pb2.G_BaseInfoRequest.SerializeToString,
            product__pb2.G_PageProductClassifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductMatchingList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetProductMatchingList',
            product__pb2.G_ProductMatchingRequest.SerializeToString,
            product__pb2.G_ProductMatchingListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProductPullTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/ProductPullTask',
            product__pb2.G_ProductPullRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductPriceTrackingList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetProductPriceTrackingList',
            product__pb2.G_ProductPriceTrackListRequest.SerializeToString,
            product__pb2.G_ProductPriceTrackListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductStocksList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetProductStocksList',
            product__pb2.G_ProductStocksRequest.SerializeToString,
            product__pb2.G_PageProductStocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductWarehouseStockslist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetProductWarehouseStockslist',
            product__pb2.G_ProductWarehouseStocksRequest.SerializeToString,
            product__pb2.G_PageProductStocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProduct',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProductStock',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductVirtualStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProductVirtualStock',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProductPrice',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProductSupplementPricePull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/ProductSupplementPricePull',
            product__pb2.G_ProductMatchingRequest.SerializeToString,
            product__pb2.G_PageProductSupplementPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProductListByKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/ProductListByKeys',
            product__pb2.G_ProductListByKeysRequest.SerializeToString,
            product__pb2.G_ProductListByKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductUnits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProductUnits',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductDateList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetProductDateList',
            product__pb2.G_PageProductDateListRequest.SerializeToString,
            product__pb2.G_PageProductDateListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProductState',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductSkuState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/GetProductSkuState',
            product__pb2.G_ProductSkuStateRequest.SerializeToString,
            product__pb2.G_ProductSkuStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushProductAttribute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Product/PushProductAttribute',
            common__pb2.G_PushRequest.SerializeToString,
            common__pb2.G_PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
