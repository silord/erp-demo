# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
import jxc_pb2 as jxc__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in jxc_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class JxcApiStub(object):
    """进销存API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBillDetailBody = channel.unary_unary(
                '/JxcApi/GetBillDetailBody',
                request_serializer=jxc__pb2.G_JXC_BillDetailParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultBillDetailResponse.FromString,
                _registered_method=True)
        self.GetBillDetailHead = channel.unary_unary(
                '/JxcApi/GetBillDetailHead',
                request_serializer=jxc__pb2.G_JXC_BillDetailParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultBillHeadResponse.FromString,
                _registered_method=True)
        self.GetBossData = channel.unary_unary(
                '/JxcApi/GetBossData',
                request_serializer=jxc__pb2.G_JXC_BossDataParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultBossDataResponse.FromString,
                _registered_method=True)
        self.GetProductCategory = channel.unary_unary(
                '/JxcApi/GetProductCategory',
                request_serializer=jxc__pb2.G_JXC_TreeKey_ParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_TreeNodeOneResponse.FromString,
                _registered_method=True)
        self.GetBillType = channel.unary_unary(
                '/JxcApi/GetBillType',
                request_serializer=jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultBillTypeResponse.FromString,
                _registered_method=True)
        self.GetCustormerCategory = channel.unary_unary(
                '/JxcApi/GetCustormerCategory',
                request_serializer=jxc__pb2.G_JXC_TreeKey_ParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_TreeNodeOneResponse.FromString,
                _registered_method=True)
        self.GetWarehourseData = channel.unary_unary(
                '/JxcApi/GetWarehourseData',
                request_serializer=jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultWerahourseResponse.FromString,
                _registered_method=True)
        self.GetDepartmentData = channel.unary_unary(
                '/JxcApi/GetDepartmentData',
                request_serializer=jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultDepartmentResponse.FromString,
                _registered_method=True)
        self.GetEmployeeData = channel.unary_unary(
                '/JxcApi/GetEmployeeData',
                request_serializer=jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultEmployeeResponse.FromString,
                _registered_method=True)
        self.GetBranchData = channel.unary_unary(
                '/JxcApi/GetBranchData',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultBranchResponse.FromString,
                _registered_method=True)
        self.GetMoneyData = channel.unary_unary(
                '/JxcApi/GetMoneyData',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultMoneyDataResponse.FromString,
                _registered_method=True)
        self.GetTotalAPAR = channel.unary_unary(
                '/JxcApi/GetTotalAPAR',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultAPARDataResponse.FromString,
                _registered_method=True)
        self.GetTotalStock = channel.unary_unary(
                '/JxcApi/GetTotalStock',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultTotalStockResponse.FromString,
                _registered_method=True)
        self.GetReusultSituationSaleData = channel.unary_unary(
                '/JxcApi/GetReusultSituationSaleData',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ReusultSituationSaleDataResponse.FromString,
                _registered_method=True)
        self.GetProductSaleData = channel.unary_unary(
                '/JxcApi/GetProductSaleData',
                request_serializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultProductSaleStatisticListResponse.FromString,
                _registered_method=True)
        self.GetProductPriceTranceData = channel.unary_unary(
                '/JxcApi/GetProductPriceTranceData',
                request_serializer=jxc__pb2.G_JXC_ProductPriceTranceParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultProductPriceTranceResponse.FromString,
                _registered_method=True)
        self.GetOperateHistoryData = channel.unary_unary(
                '/JxcApi/GetOperateHistoryData',
                request_serializer=jxc__pb2.G_JXC_OperatorHistoryParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_OperatorHistoryDataListResponse.FromString,
                _registered_method=True)
        self.GetOneProductSaleFlow = channel.unary_unary(
                '/JxcApi/GetOneProductSaleFlow',
                request_serializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultOneProductSaleFlowResponse.FromString,
                _registered_method=True)
        self.GetCustomerSaleData = channel.unary_unary(
                '/JxcApi/GetCustomerSaleData',
                request_serializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultCustomerSaleStatisticResponse.FromString,
                _registered_method=True)
        self.GetOneCustomerSaleFlow = channel.unary_unary(
                '/JxcApi/GetOneCustomerSaleFlow',
                request_serializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultOneCustomerSaleFlowResponse.FromString,
                _registered_method=True)
        self.GetEmployeeSaleData = channel.unary_unary(
                '/JxcApi/GetEmployeeSaleData',
                request_serializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultEmployeeSaleStatisticResponse.FromString,
                _registered_method=True)
        self.GetOneEmployeeSaleFlow = channel.unary_unary(
                '/JxcApi/GetOneEmployeeSaleFlow',
                request_serializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultOneEmployeeSaleFlowResponse.FromString,
                _registered_method=True)
        self.GetAgentAPARData = channel.unary_unary(
                '/JxcApi/GetAgentAPARData',
                request_serializer=jxc__pb2.G_JXC_APARDetailParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultAgentAPARDataResponse.FromString,
                _registered_method=True)
        self.GetAgentReciveDetail = channel.unary_unary(
                '/JxcApi/GetAgentReciveDetail',
                request_serializer=jxc__pb2.G_JXC_APARDetailParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultAgentAPARDetailResponse.FromString,
                _registered_method=True)
        self.GetIsSupportJXC = channel.unary_unary(
                '/JxcApi/GetIsSupportJXC',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultSupportJXCResponse.FromString,
                _registered_method=True)
        self.GetOperatorSituationData = channel.unary_unary(
                '/JxcApi/GetOperatorSituationData',
                request_serializer=jxc__pb2.G_JXC_BaseParmRequest.SerializeToString,
                response_deserializer=jxc__pb2.G_JXC_ResultOperatorSituationResponse.FromString,
                _registered_method=True)
        self.GetOperatorValid = channel.unary_unary(
                '/JxcApi/GetOperatorValid',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                _registered_method=True)


class JxcApiServicer(object):
    """进销存API
    """

    def GetBillDetailBody(self, request, context):
        """获取单据详情商品
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBillDetailHead(self, request, context):
        """获取单据表头
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBossData(self, request, context):
        """获取老板一张表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductCategory(self, request, context):
        """获取商品分类
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBillType(self, request, context):
        """获取单据类型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustormerCategory(self, request, context):
        """获取客户分类
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWarehourseData(self, request, context):
        """获取仓库
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDepartmentData(self, request, context):
        """获取部门
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmployeeData(self, request, context):
        """获取职员
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBranchData(self, request, context):
        """获取分支机构
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMoneyData(self, request, context):
        """获取资金余额
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalAPAR(self, request, context):
        """获取应收应付
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalStock(self, request, context):
        """获取库存
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReusultSituationSaleData(self, request, context):
        """获取经营概况中昨天，今天，近7天，近30天交易数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductSaleData(self, request, context):
        """获取商品销售报表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductPriceTranceData(self, request, context):
        """获取价格跟踪
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperateHistoryData(self, request, context):
        """获取经营历程数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOneProductSaleFlow(self, request, context):
        """获取单个商品销售情况流水
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomerSaleData(self, request, context):
        """获取客户销售统计
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOneCustomerSaleFlow(self, request, context):
        """获取单个客户销售情况流水
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmployeeSaleData(self, request, context):
        """获取职员销售统计
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOneEmployeeSaleFlow(self, request, context):
        """获取职员销售统计流水
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAgentAPARData(self, request, context):
        """获取往来单位应收应付
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAgentReciveDetail(self, request, context):
        """获取单位应收明细数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIsSupportJXC(self, request, context):
        """获取是否支持进销存
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperatorSituationData(self, request, context):
        """获取经营概况数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperatorValid(self, request, context):
        """验证操作员
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JxcApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBillDetailBody': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBillDetailBody,
                    request_deserializer=jxc__pb2.G_JXC_BillDetailParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultBillDetailResponse.SerializeToString,
            ),
            'GetBillDetailHead': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBillDetailHead,
                    request_deserializer=jxc__pb2.G_JXC_BillDetailParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultBillHeadResponse.SerializeToString,
            ),
            'GetBossData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBossData,
                    request_deserializer=jxc__pb2.G_JXC_BossDataParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultBossDataResponse.SerializeToString,
            ),
            'GetProductCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductCategory,
                    request_deserializer=jxc__pb2.G_JXC_TreeKey_ParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_TreeNodeOneResponse.SerializeToString,
            ),
            'GetBillType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBillType,
                    request_deserializer=jxc__pb2.G_JXC_FilterDataRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultBillTypeResponse.SerializeToString,
            ),
            'GetCustormerCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustormerCategory,
                    request_deserializer=jxc__pb2.G_JXC_TreeKey_ParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_TreeNodeOneResponse.SerializeToString,
            ),
            'GetWarehourseData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWarehourseData,
                    request_deserializer=jxc__pb2.G_JXC_FilterDataRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultWerahourseResponse.SerializeToString,
            ),
            'GetDepartmentData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDepartmentData,
                    request_deserializer=jxc__pb2.G_JXC_FilterDataRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultDepartmentResponse.SerializeToString,
            ),
            'GetEmployeeData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmployeeData,
                    request_deserializer=jxc__pb2.G_JXC_FilterDataRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultEmployeeResponse.SerializeToString,
            ),
            'GetBranchData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBranchData,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultBranchResponse.SerializeToString,
            ),
            'GetMoneyData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMoneyData,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultMoneyDataResponse.SerializeToString,
            ),
            'GetTotalAPAR': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalAPAR,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultAPARDataResponse.SerializeToString,
            ),
            'GetTotalStock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalStock,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultTotalStockResponse.SerializeToString,
            ),
            'GetReusultSituationSaleData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReusultSituationSaleData,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=jxc__pb2.G_JXC_ReusultSituationSaleDataResponse.SerializeToString,
            ),
            'GetProductSaleData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductSaleData,
                    request_deserializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultProductSaleStatisticListResponse.SerializeToString,
            ),
            'GetProductPriceTranceData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductPriceTranceData,
                    request_deserializer=jxc__pb2.G_JXC_ProductPriceTranceParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultProductPriceTranceResponse.SerializeToString,
            ),
            'GetOperateHistoryData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperateHistoryData,
                    request_deserializer=jxc__pb2.G_JXC_OperatorHistoryParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_OperatorHistoryDataListResponse.SerializeToString,
            ),
            'GetOneProductSaleFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOneProductSaleFlow,
                    request_deserializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultOneProductSaleFlowResponse.SerializeToString,
            ),
            'GetCustomerSaleData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomerSaleData,
                    request_deserializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultCustomerSaleStatisticResponse.SerializeToString,
            ),
            'GetOneCustomerSaleFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOneCustomerSaleFlow,
                    request_deserializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultOneCustomerSaleFlowResponse.SerializeToString,
            ),
            'GetEmployeeSaleData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmployeeSaleData,
                    request_deserializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultEmployeeSaleStatisticResponse.SerializeToString,
            ),
            'GetOneEmployeeSaleFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOneEmployeeSaleFlow,
                    request_deserializer=jxc__pb2.G_JXC_BaseStatistisParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultOneEmployeeSaleFlowResponse.SerializeToString,
            ),
            'GetAgentAPARData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAgentAPARData,
                    request_deserializer=jxc__pb2.G_JXC_APARDetailParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultAgentAPARDataResponse.SerializeToString,
            ),
            'GetAgentReciveDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAgentReciveDetail,
                    request_deserializer=jxc__pb2.G_JXC_APARDetailParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultAgentAPARDetailResponse.SerializeToString,
            ),
            'GetIsSupportJXC': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIsSupportJXC,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultSupportJXCResponse.SerializeToString,
            ),
            'GetOperatorSituationData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperatorSituationData,
                    request_deserializer=jxc__pb2.G_JXC_BaseParmRequest.FromString,
                    response_serializer=jxc__pb2.G_JXC_ResultOperatorSituationResponse.SerializeToString,
            ),
            'GetOperatorValid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperatorValid,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'JxcApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('JxcApi', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class JxcApi(object):
    """进销存API
    """

    @staticmethod
    def GetBillDetailBody(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetBillDetailBody',
            jxc__pb2.G_JXC_BillDetailParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultBillDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBillDetailHead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetBillDetailHead',
            jxc__pb2.G_JXC_BillDetailParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultBillHeadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBossData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetBossData',
            jxc__pb2.G_JXC_BossDataParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultBossDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProductCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetProductCategory',
            jxc__pb2.G_JXC_TreeKey_ParmRequest.SerializeToString,
            jxc__pb2.G_JXC_TreeNodeOneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBillType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetBillType',
            jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultBillTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCustormerCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetCustormerCategory',
            jxc__pb2.G_JXC_TreeKey_ParmRequest.SerializeToString,
            jxc__pb2.G_JXC_TreeNodeOneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWarehourseData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetWarehourseData',
            jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultWerahourseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDepartmentData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetDepartmentData',
            jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultDepartmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEmployeeData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetEmployeeData',
            jxc__pb2.G_JXC_FilterDataRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultEmployeeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBranchData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetBranchData',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            jxc__pb2.G_JXC_ResultBranchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMoneyData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetMoneyData',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            jxc__pb2.G_JXC_ResultMoneyDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTotalAPAR(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetTotalAPAR',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            jxc__pb2.G_JXC_ResultAPARDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTotalStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetTotalStock',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            jxc__pb2.G_JXC_ResultTotalStockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetReusultSituationSaleData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetReusultSituationSaleData',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            jxc__pb2.G_JXC_ReusultSituationSaleDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProductSaleData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetProductSaleData',
            jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultProductSaleStatisticListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProductPriceTranceData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetProductPriceTranceData',
            jxc__pb2.G_JXC_ProductPriceTranceParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultProductPriceTranceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOperateHistoryData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetOperateHistoryData',
            jxc__pb2.G_JXC_OperatorHistoryParmRequest.SerializeToString,
            jxc__pb2.G_JXC_OperatorHistoryDataListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOneProductSaleFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetOneProductSaleFlow',
            jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultOneProductSaleFlowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCustomerSaleData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetCustomerSaleData',
            jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultCustomerSaleStatisticResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOneCustomerSaleFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetOneCustomerSaleFlow',
            jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultOneCustomerSaleFlowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEmployeeSaleData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetEmployeeSaleData',
            jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultEmployeeSaleStatisticResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOneEmployeeSaleFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetOneEmployeeSaleFlow',
            jxc__pb2.G_JXC_BaseStatistisParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultOneEmployeeSaleFlowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAgentAPARData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetAgentAPARData',
            jxc__pb2.G_JXC_APARDetailParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultAgentAPARDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAgentReciveDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetAgentReciveDetail',
            jxc__pb2.G_JXC_APARDetailParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultAgentAPARDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIsSupportJXC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetIsSupportJXC',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            jxc__pb2.G_JXC_ResultSupportJXCResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOperatorSituationData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetOperatorSituationData',
            jxc__pb2.G_JXC_BaseParmRequest.SerializeToString,
            jxc__pb2.G_JXC_ResultOperatorSituationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOperatorValid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/JxcApi/GetOperatorValid',
            google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
